services:
  postgres:
    image: postgres:15-alpine
    container_name: medusa-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-medusa}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-medusa}
      POSTGRES_DB: ${POSTGRES_DB:-medusa}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_PORT:-5433}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-medusa}"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:7-alpine
    container_name: medusa-redis
    restart: unless-stopped
    volumes:
      - redis_data:/data
    ports:
      - "${REDIS_PORT:-6379}:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    image: medusa-backend:latest
    container_name: medusa-server
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER:-medusa}:${POSTGRES_PASSWORD:-medusa}@postgres:5432/${POSTGRES_DB:-medusa}?sslmode=disable
      REDIS_URL: redis://redis:6379
      NODE_ENV: production
      JWT_SECRET: ${JWT_SECRET:-supersecret}
      COOKIE_SECRET: ${COOKIE_SECRET:-supersecret}
      PORT: 9000
      STORE_CORS: ${STORE_CORS}
      ADMIN_CORS: ${ADMIN_CORS}
      AUTH_CORS: ${AUTH_CORS}
      MEDUSA_ADMIN_DISABLE: true
      CLIENT_WEBHOOK_URL: ${CLIENT_WEBHOOK_URL}
      MEDUSA_WEBHOOK_SECRET: ${MEDUSA_WEBHOOK_SECRET}
      MEDUSA_BACKEND_URL: ${MEDUSA_BACKEND_URL}
      S3_FILE_URL: ${S3_FILE_URL}
      S3_ACCESS_KEY_ID: ${S3_ACCESS_KEY_ID}
      S3_SECRET_ACCESS_KEY: ${S3_SECRET_ACCESS_KEY}
      S3_REGION: ${S3_REGION}
      S3_BUCKET: ${S3_BUCKET}
      S3_ENDPOINT: ${S3_ENDPOINT}
      PAYOS_RETURN_URL: ${PAYOS_RETURN_URL}
      PAYOS_CANCEL_URL: ${PAYOS_CANCEL_URL}
      PAYOS_CLIENT_ID: ${PAYOS_CLIENT_ID}
      PAYOS_API_KEY: ${PAYOS_API_KEY}
      PAYOS_CHECKSUM_KEY: ${PAYOS_CHECKSUM_KEY}
    ports:
      - "${PORT:-9000}:9000"
    volumes:
      - ./uploads:/app/uploads
  nginx:
    image: nginx:alpine
    container_name: medusa-nginx
    restart: unless-stopped
    depends_on:
      - backend
    ports:
      - "443:443"
    volumes:
      - ./uploads:/app/uploads:ro
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - /etc/letsencrypt:/etc/letsencrypt:ro
volumes:
  postgres_data:
  redis_data:
